#include <iostream>

using namespace std;

int main() {
    int size = 5;
    int letter;
    int h = 0;

    //square
    for (int i = 0; i < size; i++) {
        for (int j = 0; j < size; j++) {
            cout << "*";
        }
        cout << endl;
    }
    cout << endl;

    //square with hollow
    for (int i = 0; i < size; i++) {
        for (int j = 0; j < size; j++) {
            if (i == 0 || i == size - 1) {
                cout << "*";
            } else {
                if (j == 0 || j == size - 1) {
                    cout << "*";
                } else {
                    cout << " ";
                }
            }
        }
        cout << endl;
    }
    cout << endl;

    //half pyramid
    for (int i = 0; i < size; i++) {
        for (int j = 0; j <= i; j++) {
            cout << "*";
        }
        cout << endl;
    }
    cout << endl;

    //inverted half pyramid
    for (int i = 0; i < size; i++) {
        for (int j = 0; j < size - i; j++) {
            cout << "*";
        }
        cout << endl;
    }
    cout << endl;

    // inverted pyramid with hollow
    for (int i = 0; i < size; i++)
        cout << "*" ;
    for (int i = size; i >= 1; --i)
    {
        for (int j = 0; j < size - i; ++j){
            while (h != (2 * i - 1))
            {
                if (h == 0 || h == i - 1)
                    cout << "*" ;
                else
                    cout << " " ;
                h++;
            }
        }
        h = 0;
        cout << endl;
    }
    cout << endl;

    // pyramid
    for (int i = 0; i < size; i++) {
        for (int j = 0; j < size - i - 1; j++) {
            cout << " ";
        }
        for (int k = 0; k < 2 * i + 1; k++) {
            cout << "*";
        }
        cout << endl;
    }
    cout << endl;

    //inverted pyramid
    for (int i = 0; i < size; i++) {
        for (int j = 0; j < i; j++) {
            cout << " ";
        }
        for (int k = 0; k < 2 * (size - i) - 1; k++) {
            cout << "*";
        }
        cout << endl;
    }
    cout << endl;

    //hollow pyramid
    for (int i = 0; i < size; i++) {
        for (int j = 0; j < size - i - 1; j++) {
            cout << " ";
        }
        for (int k = 0; k < 2 * i + 1; k++) {
            if (i == 0 || i == size - 1) {
                cout << "*";
            } else {
                if (k == 0 || k == 2 * i) {
                    cout << "*";
                } else {
                    cout << " ";
                }
            }
        }
        cout << endl;
    }
    cout << endl;

    //number square
    for (int i = 0; i < size; i++) {
        for (int j = 0; j < size; j++) {
            cout << (j + 1);
        }
        cout << endl;
    }
    cout << endl;

    //half number pyramid
    for (int i = 0; i < size; i++) {
        for (int j = 0; j <= i; j++) {
            cout << (j + 1);
        }
        cout << endl;
    }
    cout << endl;

    //half reverse number pyramid
    for (int i = 0; i < size; i++) {
        for (int j = 1; j < size - i; j++) {
            cout << " ";
        }
        for (int k = 0; k <= i; k++) {
            cout << (k+1);
        }
        cout << endl;
    }
    cout << endl;

    //small letter square
    letter = 97;
    for (int i = 0; i < size; i++) {
        for (int j = 0; j < size; j++) {
            cout << ((char) (letter + j));
        }
        cout << endl;
    }
    cout << endl;

    //capital letter square
    letter = 65;
    for (int i = 0; i < 4; i++) {
        for (int j = 0; j < 6; j++) {
            cout << ((char) (letter)) ;
            letter = letter + 1;
        }
        cout << endl;
    }

    //capital letter half pyramid
    letter = 65;
    cout << endl;
    for (int i = 0; i < size; i++) {
        for (int j = 0; j <= i; j++) {
            cout << ((char) (letter + j));
        }
        cout << endl;
    }
}
